/* element.less */

.clearfix { // @brickrouge: we use it
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

h1, h2, h3, h4, h5, h6 {
	a {
		color: inherit;
	}
	
	a:not(:hover) {
		text-decoration: none;
	}
}


// inputs

input[type="text"][size],
input[type="password"][size] {
	width: auto;
}

input.unstyled,
input[type="text"].unstyled,
input[type="password"].unstyled,
select.unstyled,
textarea.unstyled {
	background: transparent;
	border: none;
	box-shadow: none;
}

ul.unstyled,
ol.unstyled {
	margin: 0;
	padding: 0;
	list-style: none;
	display: block;
}

/*
 * Labels
 *
 * Altough one can easily generate a label element, the task is usually left to the Brickrouge
 * framework for it handles positioning, translating, as well as special cases such as field
 * labels, element labels, or decoration when the value of the element is required or invalid.
 * 
 * The "above" class is added to label when elements are genereated with the T_LABEL_POSITION
 * tag set to "above".
 */	
label.above {
	display: block;
	margin-bottom: .2em;
}

/*
 * The "required" class is added to elements and their label when the T_REQUIRED tag
 * (or "required") is set to true.
 */	 
label.required {
	&:after,
	&.wrapping > .label-text:after {
		content: '*';
		margin-left: .5ex;
		font-size: 0.83em;
	}
	
	&.wrapping:after {
		content: '';
		margin-left: 0;
	}
	
	&:after,
	&.wrapping > .label-text:after,
	sup {
		color: #339BB9;
		vertical-align: text-top;
	}
}