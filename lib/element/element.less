/* element.less */

.hidden {
	display: none;
}

.invisible {
	visibility: hidden;
}

/*!
 * Elements can be decorated with a description block. The description block is created as
 * "div.element-description" and its content is defined using the T_DESCRIPTION tag.
 */
.element-description {
	font-size: .75em;
	margin: 1em 0;
	max-width: 76ex;
}

/*! Shared colors for buttons and alerts */
button,
.btn,
.alert-message {
	/*! Set text color */
	&.danger,
	&.danger:hover,
	&.error,
	&.error:hover,
	&.continue,
	&.continue:hover,
	&.success,
	&.success:hover,
	&.info,
	&.info:hover {
		color: @white
	}
	/*! Danger and error appear as red */
	&.danger,
	&.error {
		.gradientBar(#ee5f5b, #c43c35);
	}
	/*! Success appears as green */
	&.continue,
	&.success {
		.gradientBar(#62c462, #57a957);
	}
	/*! Info appears as a neutral blue */
	&.info {
		.gradientBar(#5bc0de, #339bb9);
	}
}

/*! inputs */

button,
select,
input[type=text],
input[type=password],
textarea,
.btn,
.uneditable-input,
.like-input {
	border: 1px solid #CFCFCF;
	.border-radius(4px);
	display: inline-block;
	padding: .2em .5ex;
	font-size: .9em;
	font-family: inherit;
	background: white;
}

input[type=text][size],
input[type=password][size] {
	width: auto;
}

.uneditable-input {
	background-color: #eee;
	.box-shadow(inset 0 1px 2px rgba(0,0,0,.075));
	display: block;
}

/*! inputs / focus states */
input,
select,
textarea,
.like-input {
	@transition: border linear .2s, box-shadow linear .2s;
	.transition(@transition);
	.box-shadow(inset 0 1px 3px rgba(0,0,0,.1));
}

input.unstyled,
input[type=text].unstyled,
input[type=password].unstyled,
select.unstyled,
textarea.unstyled {
	background: transparent;
	border: none;
	box-shadow: none;
}

input:focus,
textarea:focus,
.like-input:focus {
	outline: none;
	border-color: rgba(82,168,236,.8);
	@shadow: inset 0 1px 3px rgba(0,0,0,.1), 0 0 8px rgba(82,168,236,.6);
	.box-shadow(@shadow);
}

/*! Turn off focus for disabled (read-only) form elements */
input[readonly]:focus,
textarea[readonly]:focus,
input:disabled,
input.disabled,
.like-input.disabled {
	background: #f5f5f5;
	border-color: #ddd;
	.box-shadow(none);
}

/*! Placeholder text gets special styles; can't be bundled together though for some reason */
:-moz-placeholder,
.like-input.placeholder
{
	color: @grayLight;
}

::-webkit-input-placeholder
{
	color: @grayLight;
}

/*! Form element sizes */
.input-mini,
input.mini,
textarea.mini,
select.mini {
	width: 60px;
}

.input-small,
input.small,
textarea.small,
select.small {
	width: 90px;
}

.input-medium,
input.medium,
textarea.medium,
select.medium {
	width: 150px;
}

.input-large,
input.large,
textarea.large,
select.large {
	width: 210px;
}

.input-xlarge,
input.xlarge,
textarea.xlarge,
select.xlarge {
	width: 270px;
}

.input-xxlarge,
input.xxlarge,
textarea.xxlarge,
select.xxlarge {
	width: 530px;
}

textarea.xxlarge {
	overflow-y: auto;
}

/*! BUTTON STYLES
	------------- */

/*! Base .btn styles */
button,
.btn {
	/*! Button Base */
	cursor: default;
	display: inline-block;
	#gradient > .vertical-three-colors(#ffffff, #ffffff, 25%, darken(#ffffff, 10%)); //* Don't use .gradientbar() here since it does a three-color gradient */
	/*padding: 5px 14px 6px;*/
	padding: 0.45em 2ex;
	text-shadow: 0 1px 1px rgba(255,255,255,.75);
	color: #333;
	/*font-size: 13px;*/
	line-height: normal;
	border: 1px solid #ccc;
	border-bottom-color: #bbb;
	.border-radius(4px);
	@shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);
	.box-shadow(@shadow);

	&:hover {
		background-position: 0 -15px;
		color: #333;
		text-decoration: none;
	}

	// Primary Button Type
	&.primary {
		color:#fff;
		.gradientBar(@blue, @blueDark)
	}

	 // Transitions
	.transition(.1s linear all);

	// Active and Disabled states
	&:active {
		@shadow: inset 0 2px 4px rgba(0,0,0,.25), 0 1px 2px rgba(0,0,0,.05);
		.box-shadow(@shadow);
	}
	&.disabled {
		cursor: default;
		background-image: none;
		.reset-filter();
		.opacity(65);
		.box-shadow(none);
	}
	&[disabled] {
		// disabled pseudo can't be included with .disabled
		// def because IE8 and below will drop it ;_;
		cursor: default;
		background-image: none;
		.reset-filter();
		.opacity(65);
		.box-shadow(none);
	}

	// Button Sizes
	&.large {
		font-size: 16px;
		line-height: normal;
		padding: 9px 14px 9px;
		.border-radius(6px);
	}
	&.small {
		padding: 7px 9px 7px;
		font-size: 11px;
	}
}

/*! Super jank hack for removing border-radius from IE9 so we can keep filter gradients on alerts and buttons */
:root button,
:root .alert-message,
:root .btn {
	border-radius: 0 \0;
}

/*! Help Firefox not be a jerk about adding extra padding to buttons */
button,
.btn,
input[type=submit].btn {
	&::-moz-focus-inner {
		padding: 0;
		border: 0;
	}
}

a[href].btn {
	text-decoration: none;
}

ul.unstyled,
ol.unstyled {
	margin: 0;
	padding: 0;
	list-style: none;
	display: block;
}

/*!
 * Labels
 *
 * Altough one can easily generate a label element, the task is usually left to the BrickRouge
 * framework for it handles positioning, translating as well as special cases such as field labels,
 * element labels or decoration when the value of the element is required or invalid.  
 */
label {
	/*!
	 * The "above" class is added to label when elements are genereated with the T_LABEL_POSITION
	 * tag set to "above".
	 */
	&.above {
		display: block;
		margin-bottom: .2em;
	}
	/*!
	 * The "required" class is added to elements and their label when the T_REQUIRED tag
	 * (or "required") is set to true.
	 */
	&.required {
		&:after {
			content: '*';
			margin-left: .5ex;
			font-size: 0.83em;
		}
		
		sup, &:after {
			color: #339BB9;
			vertical-align: text-top;
		}
	}
}

/*!
 * Stacked options for forms (radio buttons or checkboxes)
 */
.inputs-list {
	margin: 0 0 5px;
	padding: 0;
	display: block;
	
	li {
		display: block;
		padding: 0;
		width: 100%;
		label {
			display: block;
			float: none;
			width: auto;
			padding: 0;
			line-height: @baseline;
			text-align: left;
			white-space: normal;
			strong {
				color: @gray;
			}
			small {
				font-size: 12px;
				font-weight: normal;
			}
		}
		
		ul.inputs-list {
			margin-left: 25px;
			margin-bottom: 10px;
			padding-top: 0;
		}

		&:first-child {
			padding-top: 5px;
		}
	}
	
	> label {
		display: block;
	}
	
	input[type=radio],
	input[type=checkbox] {
		margin-bottom: 0;
	}
}
