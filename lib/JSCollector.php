<?php

/*
 * This file is part of the Brickrouge package.
 *
 * (c) Olivier Laviale <olivier.laviale@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Brickrouge;

use ICanBoogie\FileCache;

/**
 * Collector for Javascript assets.
 */
class JSCollector extends AssetsCollector
{
	public function __toString()
	{
		$collected = $this->get();

		#
		# cached ouput
		#

		try
		{
			if ($this->use_cache)
			{
				$recent = 0;
				$root = DOCUMENT_ROOT;

				foreach ($collected as $file)
				{
					$recent = max($recent, filemtime($root . $file));
				}

				$cache = new FileCache([

					FileCache::T_REPOSITORY => \ICanBoogie\app()->config['repository.files'] . '/assets',
					FileCache::T_MODIFIED_TIME => $recent

				]);

				$key = sha1(implode(',', $collected)) . '.js';

				$rc = $cache->get($key, [ $this, 'cache_construct' ], [ $collected ]);

				if ($rc)
				{
					return PHP_EOL . PHP_EOL . '<script type="text/javascript" src="' . $cache->repository . '/' . $key . '"></script>' . PHP_EOL . PHP_EOL;
				}
			}
		}
		catch (\Exception $e) { echo render_exception($e); }

		#
		# default output
		#

		$rc = '';

		foreach ($collected as $url)
		{
			$rc .= '<script type="text/javascript" src="' . escape($url) . '"></script>' . PHP_EOL;
		}

		return $rc;
	}

	/**
	 * @inheritdoc
	 */
	public function cache_construct(FileCache $cache, $key, array $userdata)
	{
		list($collected) = $userdata;

		$class = __CLASS__;
		$date = date('Y-m-d');
		$list = json_encode($collected);

		$content = <<<EOT
/*
 * Compiled Javascript file generated by $class ($date)
 */

var brickrouge_cached_js_assets = $list;

EOT;

		foreach ($collected as $url)
		{
			$content .= file_get_contents(DOCUMENT_ROOT . $url) . PHP_EOL;
		}

		file_put_contents(getcwd() . '/' . $key, $content);

		return $key;
	}
}
